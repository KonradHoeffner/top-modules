services:
  db:
    image: postgres:15
    restart: unless-stopped
    stop_grace_period: 1m30s
    shm_size: 1g
    volumes:
      - top-data:/var/lib/postgresql/data
    env_file:
      - docker-compose.env

  neo4j:
    image: neo4j:5
    restart: unless-stopped
    stop_grace_period: 1m30s
    volumes:
      - top-neo4j-data:/data
    env_file:
      - docker-compose.env

  base:
    image: top-base
    build: parent

  backend:
    build: parent/top-backend
    restart: unless-stopped
    depends_on: [base, db]
    volumes:
      - query-results:/data/query_results
      # - top-api.tgz:/usr/src/top-api/top-api.tgz:ro # does not work because the frontend needs it at build time
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NEO4J_HOST=neo4j
      - DB_NEO4J_PORT=7687
      - OAUTH2_URL=http://keycloak:8080/auth
    env_file:
      - docker-compose.env

  frontend:
    build: top-frontend
    restart: unless-stopped
    depends_on: [base, backend]
    env_file:
      - docker-compose.env

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
    env_file:
      - docker-compose.env

  keycloak:
    image: jboss/keycloak:16.1.1
    profiles:
      - auth
    restart: unless-stopped
    depends_on:
      - keycloak-db
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak-db
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak

  keycloak-db:
    image: postgres:15
    profiles:
      - auth
    restart: unless-stopped
    stop_grace_period: 1m30s
    volumes:
      - keycloak-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak

volumes:
  top-data:
  top-neo4j-data:
  caddy-data:
  keycloak-data:
  query-results:
